<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 指定搜索自动装配组件的路径 -->
    <!--该标签实现的部分内容：
        1.内部注册一个参数解析器conversionService，为FormattingConversionServiceFactoryBean的实例，前端参数会自动转换绑定到
        对象上就是此功能实现的
        2.默认注册一个校验框架，所以controller的@valid能起作用也是此处设置的；
        3.注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter，启用mvc注解模式
    -->
    <mvc:annotation-driven/>
    <!--平台层web测请求入口所在的控制器-->
    <context:component-scan base-package="cn.llf.framework.gateway.web.admin"/>
    <!--全局拦截输入的格式为fastjson格式-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="cn.eleven.common.intercept.WriteFastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:interceptors>
        <bean class="cn.llf.framework.gateway.interceptor.UserLoginInterceptor"/>
    </mvc:interceptors>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!--todo 为什么和自己的cn.eleven.common.intercept.WriteFastJsonHttpMessageConverter冲突-->
    <!--&lt;!&ndash;使用格式化的参数转换解析器，支持数组对象的接收&ndash;&gt;-->
    <!--&lt;!&ndash;该格式化的&ndash;&gt;-->
    <!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>-->
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->
</beans>
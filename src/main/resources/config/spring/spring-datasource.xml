<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="3000"/>
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="name" value="default"/>
        <property name="url" value="${database.url}"/>
        <!--<property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false"/>-->
        <property name="driverClassName" value="${database.driver}"/>
        <property name="username" value="${database.user}"/>
        <property name="password" value="${database.password}"/>
        <property name="filters" value="log4j,wall"/>
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
        <property name="maxActive" value="${database.maxActive}"/>
        <property name="initialSize" value="${database.initialSize}"/>
        <property name="minIdle" value="${database.maxIdle}"/>
        <property name="maxWait" value="${database.maxWait}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!--有两个含义：-->
        <!--1) Destroy线程会检测连接的间隔时间-->
        <!--2)testWhileIdle的判断依据，详细看testWhileIdle属性的说明-->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="200"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!--<property name="timeBetweenLogStatsMillis" value="300000"/>-->
    </bean>

    <!--调度器的数据库连接词此配置信息-->
    <bean id="quartzDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="name" value="quartzDataSource"/>
        <property name="url" value="${database.url}"/>
        <!--<property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false"/>-->
        <property name="driverClassName" value="${database.driver}"/>
        <property name="username" value="${database.user}"/>
        <property name="password" value="${database.password}"/>
        <property name="filters" value="log4j,wall"/>
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
        <property name="maxActive" value="${database.maxActive}"/>
        <property name="initialSize" value="${database.initialSize}"/>
        <property name="minIdle" value="${database.maxIdle}"/>
        <property name="maxWait" value="${database.maxWait}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!--有两个含义：-->
        <!--1) Destroy线程会检测连接的间隔时间-->
        <!--2)testWhileIdle的判断依据，详细看testWhileIdle属性的说明-->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="200"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!--<property name="timeBetweenLogStatsMillis" value="300000"/>-->
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--事物管理的对象，通常直接是数据库-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 声明式事务管理 配置事物的注解方式注入,强制使用CGLIB动态代理，针对controller和service都起作用-->
    <!--高版本的spring已经实现了代理方式的自动切换，即使没有声明强制使用cglib代理方式，也可以实现对没有实现接口
    的类的事物管理，-->
    <!--如果要实现对controller层的事物管理，则需要在对应的mvc配置文件启动事物管理，否则controller的没有事物管理-->
    <!--该作用是启动支持@Transactional事务的申明-->
    <tx:annotation-driven  transaction-manager="txManager" proxy-target-class="true"/>



    <!--基于aop切面实现的事务管理-->
    <tx:advice transaction-manager="txManager" id="txAdvice">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="interceptorPointCuts" expression="execution(* cn.llf.framework.services..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts"/>
    </aop:config>

</beans>